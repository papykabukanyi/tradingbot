# TRADING BOT SETUP INSTRUCTIONS

## Local Development Setup

1. **Clone the repository:**
```
git clone https://github.com/papykabukanyi/tradingbot.git
cd tradingbot
```

2. **Install dependencies:**
```
npm install
```

3. **Configure your environment:**
   - Copy `.env.example` to `.env`
   ```
   cp .env.example .env
   ```
   - Get your Alpaca API credentials:
     - Go to https://app.alpaca.markets/paper/dashboard/overview
     - Create a paper trading account (free)
     - Generate API keys in the dashboard
   - Edit your `.env` file with your actual API keys
   - NEVER commit this file to version control!

4. **Verify your configuration:**
```
npm run check-env
```

5. **Start the trading bot:**
```
npm start
```

6. **Access the dashboard:**
   - Open: http://localhost:3000
   - Use the interface to control the trading bot

## Security Best Practices

- NEVER share your API keys or commit them to version control
- Refer to `SECURITY.md` for complete security guidelines
- Use paper trading mode for testing purposes

## Railway Deployment

For deploying to Railway:
- See the `RAILWAY_SETUP.md` file for detailed instructions
- Use Railway's environment variable system for all secrets
- Never commit sensitive data to your repository
```

## Files Updated:
✅ News API key added: 9fba6691224e4fe9b311c9c5755c2808
✅ README moved to documentation.txt and git-ignored
✅ Enhanced trending stock detection
✅ Dashboard shows trending stocks with volume indicators
✅ Expanded watchlist to 32 high-volume stocks
✅ All financial documentation hidden from git

## Next Steps:
1. Get your Alpaca secret key
2. Update .env file
3. Run: node server.js
4. Open: http://localhost:3000
5. Start trading bot from dashboard

The bot will now:
- Identify trending stocks with high volume
- Apply trending bonuses to trading signals
- Show trending indicators in the dashboard
- Target 8-month options that stay at-the-money
- Use technical analysis + news sentiment
